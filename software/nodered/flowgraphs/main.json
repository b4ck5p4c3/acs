[
    {
        "id": "8d261cdd.c349c8",
        "type": "tab",
        "label": "Lights",
        "disabled": false,
        "info": ""
    },
    {
        "id": "623c46d.386b9b8",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Portal door",
        "topic": "modbus/endpointpp/state/portal_door_opened",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 80,
        "y": 100,
        "wires": [
            [
                "14c6e2ce.1812ad"
            ]
        ]
    },
    {
        "id": "2309ddcc.1caf32",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Red door",
        "topic": "modbus/endpointpp/state/red_door_opened",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 80,
        "y": 180,
        "wires": [
            [
                "14c6e2ce.1812ad"
            ]
        ]
    },
    {
        "id": "f7f33cd.c5e88c",
        "type": "function",
        "z": "8d261cdd.c349c8",
        "name": "Counting open-close cycles",
        "func": "// Общая идея примерно такая: подбиваем количество falling и \n// rising edges, и на основе этого принимаем решение о том,\n// закрыты или открыты сейчас двери.\n\nlet edgesCounter = context.get('edgesCounter');\n\n// Считаем что rising edges инкрементируют счётчик\nif (msg.payload === 'True')\n  edgesCounter += 1;\n\n// .. а falling edges декрементируют\nelse if (msg.payload === 'False')\n  edgesCounter -= 1;\n\n// Перестраховываемся на случай потенциальных проблем,\n// не давая счётчику выйти за допустимые границы\nif (edgesCounter < 0)\n  edgesCounter = 0;\nelse if (edgesCounter > 8)\n  edgesCounter = 2;\n\n// Если счётчик вышел в ноль, то считаем что двери закрыты\nif (edgesCounter === 0)\n  msg.payload = 'False';\nelse \n  msg.payload = 'True';\n\n// Сохраняем счётчик в стейт\ncontext.set('edgesCounter', edgesCounter);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('edgesCounter', 0);",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "161ed421.2925dc"
            ]
        ]
    },
    {
        "id": "161ed421.2925dc",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in Portal",
        "topic": "modbus/endpointpp/set/portal_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1220,
        "y": 140,
        "wires": []
    },
    {
        "id": "e23d279e.d55498",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in the Portal Area",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "3f43360a.b26fca",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Aquarium door",
        "topic": "modbus/endpointpp/state/aquarium_door_opened",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 360,
        "wires": [
            [
                "2a1eb4d7.4a05bc"
            ]
        ]
    },
    {
        "id": "fe744b3b.fdae48",
        "type": "function",
        "z": "8d261cdd.c349c8",
        "name": "Counting open-close cycles",
        "func": "// Общая идея примерно такая: подбиваем количество falling и \n// rising edges, и на основе этого принимаем решение о том,\n// закрыты или открыты сейчас двери.\n\nlet edgesCounter = context.get('edgesCounter');\n\n// Считаем что rising edges инкрементируют счётчик\nif (msg.payload === 'True')\n  edgesCounter += 1;\n\n// .. а falling edges декрементируют\nelse if (msg.payload === 'False')\n  edgesCounter -= 1;\n\n// Перестраховываемся на случай потенциальных проблем,\n// не давая счётчику выйти за допустимые границы\nif (edgesCounter < 0)\n  edgesCounter = 0;\nelse if (edgesCounter > 8)\n  edgesCounter = 4;\n\n// Если счётчик вышел в ноль, то считаем что двери закрыты\nif (edgesCounter === 0)\n  msg.payload = 'False';\nelse \n  msg.payload = 'True';\n\n// Сохраняем счётчик в стейт\ncontext.set('edgesCounter', edgesCounter);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('edgesCounter', 0);",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "cdd304c0.5debf8"
            ]
        ]
    },
    {
        "id": "cdd304c0.5debf8",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Spotlight in Aquarium",
        "topic": "modbus/endpointpp/set/aquarium_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1260,
        "y": 400,
        "wires": []
    },
    {
        "id": "14c6e2ce.1812ad",
        "type": "switch",
        "z": "8d261cdd.c349c8",
        "name": "Pass \"Door open\" events without delay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "f7f33cd.c5e88c"
            ],
            [
                "34a8192c.685146"
            ]
        ]
    },
    {
        "id": "34a8192c.685146",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "Delay \"door closed\" events for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 660,
        "y": 180,
        "wires": [
            [
                "f7f33cd.c5e88c"
            ]
        ]
    },
    {
        "id": "484c4fb4.1465f",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in the Aquarium",
        "info": "",
        "x": 140,
        "y": 320,
        "wires": []
    },
    {
        "id": "2a1eb4d7.4a05bc",
        "type": "switch",
        "z": "8d261cdd.c349c8",
        "name": "Pass \"Door open\" events without delay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "fe744b3b.fdae48"
            ],
            [
                "c2bb3db0.c2eb5"
            ]
        ]
    },
    {
        "id": "c2bb3db0.c2eb5",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "Delay \"door closed\" events for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 700,
        "y": 460,
        "wires": [
            [
                "fe744b3b.fdae48"
            ]
        ]
    },
    {
        "id": "7e78b9f9.6e8ab",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Red door",
        "topic": "modbus/endpointpp/state/red_door_opened",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 440,
        "wires": [
            [
                "2a1eb4d7.4a05bc"
            ]
        ]
    },
    {
        "id": "f7d8ebe2.7bcf58",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "",
        "topic": "modbus/endpointint/state/hack_light_switch",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 270,
        "y": 600,
        "wires": [
            [
                "ed941f22.8f23c",
                "363385d8.80fbca",
                "30cc856a.728f2a",
                "ed24f9e9.90c4c8",
                "dc644ca5.48a56",
                "5cba3660.6d1378",
                "d8afd16e.33b86"
            ]
        ]
    },
    {
        "id": "ed941f22.8f23c",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Hack light",
        "topic": "modbus/endpointint/set/hack_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 600,
        "y": 680,
        "wires": []
    },
    {
        "id": "cf9b3211.ab41b",
        "type": "debug",
        "z": "8d261cdd.c349c8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 720,
        "wires": []
    },
    {
        "id": "ed24f9e9.90c4c8",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Yellow traffic",
        "topic": "modbus/endpointint/set/yellow_traffic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 610,
        "y": 580,
        "wires": []
    },
    {
        "id": "30cc856a.728f2a",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Red traffic",
        "topic": "modbus/endpointint/set/red_traffic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "363385d8.80fbca",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Red light",
        "topic": "modbus/endpointint/set/red_space_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 600,
        "y": 500,
        "wires": []
    },
    {
        "id": "7e221e90.61f9c",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Microtraffic red",
        "topic": "bus/devices/traffic-light/green",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 980,
        "y": 800,
        "wires": []
    },
    {
        "id": "dc644ca5.48a56",
        "type": "change",
        "z": "8d261cdd.c349c8",
        "name": "Convert True to \"on\", everything else to \"off\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"True\" ? \"on\" : \"off\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 800,
        "wires": [
            [
                "7e221e90.61f9c"
            ]
        ]
    },
    {
        "id": "5cba3660.6d1378",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Green traffic",
        "topic": "modbus/endpointint/set/green_traffic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 610,
        "y": 620,
        "wires": []
    },
    {
        "id": "d8afd16e.33b86",
        "type": "change",
        "z": "8d261cdd.c349c8",
        "name": "Convert True to \"on\", everything else to \"off\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"True\" ? \"on\" : \"off\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 760,
        "wires": [
            [
                "a80c7d00.163e2"
            ]
        ]
    },
    {
        "id": "a80c7d00.163e2",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Microtraffic Red",
        "topic": "bus/devices/traffic-light/red",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 980,
        "y": 760,
        "wires": []
    },
    {
        "id": "41d852.9aa777b",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Projector master",
        "topic": "bus/dmx/0/1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1160,
        "y": 480,
        "wires": []
    },
    {
        "id": "898a85fb.3d71e8",
        "type": "change",
        "z": "8d261cdd.c349c8",
        "name": "Convert True to \"255\", everything else to \"0\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"True\" ? 255 : 0",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 680,
        "wires": [
            [
                "41d852.9aa777b",
                "53a1e427.9d1eac",
                "b1d107c6.fe5288",
                "a984fe98.3f53c",
                "6c8ce7f1.3cbf28",
                "cf9b3211.ab41b"
            ]
        ]
    },
    {
        "id": "53a1e427.9d1eac",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Projector Red",
        "topic": "bus/dmx/0/2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1160,
        "y": 520,
        "wires": []
    },
    {
        "id": "b1d107c6.fe5288",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Projector Green",
        "topic": "bus/dmx/0/3",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1160,
        "y": 560,
        "wires": []
    },
    {
        "id": "a984fe98.3f53c",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Projector Blue",
        "topic": "bus/dmx/0/4",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1160,
        "y": 600,
        "wires": []
    },
    {
        "id": "6c8ce7f1.3cbf28",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Projector White",
        "topic": "bus/dmx/0/5",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1160,
        "y": 640,
        "wires": []
    },
    {
        "id": "12539a43.97344e",
        "type": "mqtt-broker",
        "name": "Corleone",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]
