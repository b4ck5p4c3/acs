[
    {
        "id": "3f4159ea.cdc276",
        "type": "tab",
        "label": "Door & Presence",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8d261cdd.c349c8",
        "type": "tab",
        "label": "Lights",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b99cea79.040428",
        "type": "tab",
        "label": "Access Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "235c2ad5.2abe8e",
        "type": "tab",
        "label": "Telegram Bot",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c425948d.c958d8",
        "type": "tab",
        "label": "Media",
        "disabled": false,
        "info": ""
    },
    {
        "id": "66899f78.ccef5",
        "type": "subflow",
        "name": "Open doors for 10 seconds",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "14395c5c.ef7a44"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 360,
                "wires": [
                    {
                        "id": "db1f52f8.2b3318",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5fdbdfda.c7682",
        "type": "subflow",
        "name": "Control Aquarium Lock",
        "info": "# Control Aquarium Lock\nThis subflow controls the aquarium lock state (magnetic lock on the external door).\n\n## Input\nReceives \"True\" and \"False\" as strings.\n\n    - **True** — Locks the door\n    - **False** — Unlocks the door",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 220,
                "wires": [
                    {
                        "id": "1c258d13.43e2c3"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "State"
        ]
    },
    {
        "id": "b3eeeca4.5051b",
        "type": "subflow",
        "name": "Open Red Door",
        "info": "Open Red Door\n=====\nThis subflows unlocks the Red Door's electromechanical lock.\n\n**Notice:** due to the architecture of this lock, it canno't be closed without direct physical iteraction, i.e. you can close it only IRL.",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 160,
                "wires": [
                    {
                        "id": "9e0a2bca.d844b8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "81da57ea.a83d2",
        "type": "subflow",
        "name": "Control Portal Panel Indicator",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 260,
                "wires": [
                    {
                        "id": "486e7e18.6e66b"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/light.svg"
    },
    {
        "id": "aefaaeba.b6c3e",
        "type": "subflow",
        "name": "Blink Aquarium Spotlight",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 180,
                "wires": [
                    {
                        "id": "38ae88a6.eb3738"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 180,
                "wires": [
                    {
                        "id": "7fb187b8.40afc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/light.svg"
    },
    {
        "id": "bd2beaba.a84ee8",
        "type": "subflow",
        "name": "Log payload into BKSP logfile",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "e5a81c05.c8f1e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c071b0b7.e8c2c",
        "type": "subflow",
        "name": "Control Left Sockets",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "a3ab81a2.ae3b18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "26622623.6fb4fa",
        "type": "subflow",
        "name": "Control Right Socket",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "374a8c7f.528bc4"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "665b57f6.ada5f8",
        "type": "subflow",
        "name": "0/1 to True/False",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "8fd799e1.dc2408"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 40,
                "wires": [
                    {
                        "id": "8fd799e1.dc2408",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "42ea986b.5d61d",
        "type": "subflow",
        "name": "True/False to 1/0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "e55e5218.91d2f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 40,
                "wires": [
                    {
                        "id": "e55e5218.91d2f8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "98516876.753508",
        "type": "subflow",
        "name": "Routine: open doors for member",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "23d86dfc.1217aa"
                    },
                    {
                        "id": "7ba1c964.59dc28"
                    },
                    {
                        "id": "3d2ac0a1.5011c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 60,
                "wires": [
                    {
                        "id": "52cbae91.521f88",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "Member's tag/card name"
        ],
        "outputLabels": [
            "Triggered, after doors will be closed"
        ]
    },
    {
        "id": "12539a43.97344e",
        "type": "mqtt-broker",
        "name": "Corleone",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a06f06f2.159d08",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Presence Switch",
        "topic": "modbus/endpointpp/state/presence_switch",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "rh": "0",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "4d66ed76.feec04",
                "39c830d.06693d",
                "4cd18294.a52114",
                "ce61abf7.03b408"
            ]
        ],
        "outputLabels": [
            "Presence"
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "825dfc66.622e08",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Portal Red Button",
        "topic": "modbus/endpointpp/state/portal_red_button",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "4b3547e5.2a7f4"
            ]
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "a971a3df.581b18",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Opening doors with red button",
        "info": "",
        "x": 170,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b3547e5.2a7f4",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Filter button press event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "56d79bcc.7ed6c4",
                "1d7d9c6f.939adc"
            ]
        ]
    },
    {
        "id": "623c46d.386b9b8",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Portal door",
        "topic": "modbus/endpointpp/state/portal_door_opened",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 100,
        "wires": [
            [
                "14c6e2ce.1812ad"
            ]
        ]
    },
    {
        "id": "2309ddcc.1caf32",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Red door",
        "topic": "modbus/endpointpp/state/red_door_opened",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 180,
        "wires": [
            [
                "14c6e2ce.1812ad"
            ]
        ]
    },
    {
        "id": "f7f33cd.c5e88c",
        "type": "function",
        "z": "8d261cdd.c349c8",
        "name": "Counting open-close cycles",
        "func": "// Общая идея примерно такая: подбиваем количество falling и \n// rising edges, и на основе этого принимаем решение о том,\n// закрыты или открыты сейчас двери.\n\nlet edgesCounter = context.get('edgesCounter');\n\n// Считаем что rising edges инкрементируют счётчик\nif (msg.payload === 'True')\n  edgesCounter += 1;\n\n// .. а falling edges декрементируют\nelse if (msg.payload === 'False')\n  edgesCounter -= 1;\n\n// Перестраховываемся на случай потенциальных проблем,\n// не давая счётчику выйти за допустимые границы\nif (edgesCounter < 0)\n  edgesCounter = 0;\nelse if (edgesCounter > 8)\n  edgesCounter = 2;\n\n// Если счётчик вышел в ноль, то считаем что двери закрыты\nif (edgesCounter === 0)\n  msg.payload = 'False';\nelse \n  msg.payload = 'True';\n\n// Сохраняем счётчик в стейт\ncontext.set('edgesCounter', edgesCounter);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('edgesCounter', 0);",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "161ed421.2925dc"
            ]
        ]
    },
    {
        "id": "161ed421.2925dc",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in Portal",
        "topic": "modbus/endpointpp/set/portal_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1220,
        "y": 140,
        "wires": []
    },
    {
        "id": "e23d279e.d55498",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in the Portal Area",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "6f816413.c1f19c",
        "type": "mqtt out",
        "z": "66899f78.ccef5",
        "name": "Opening entrance door lock",
        "topic": "bus/devices/portal.reddoor/lock/set",
        "qos": "",
        "retain": "",
        "broker": "12539a43.97344e",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "db1f52f8.2b3318",
        "type": "change",
        "z": "66899f78.ccef5",
        "name": "Set state to \"Close\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 300,
        "wires": [
            [
                "74f0e7d9.8028e8"
            ]
        ]
    },
    {
        "id": "f3ba5c83.673888",
        "type": "delay",
        "z": "66899f78.ccef5",
        "name": "Wait 10s",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 460,
        "y": 300,
        "wires": [
            [
                "db1f52f8.2b3318"
            ]
        ]
    },
    {
        "id": "56d79bcc.7ed6c4",
        "type": "subflow:66899f78.ccef5",
        "z": "3f4159ea.cdc276",
        "name": "",
        "env": [],
        "x": 700,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "14395c5c.ef7a44",
        "type": "change",
        "z": "66899f78.ccef5",
        "name": "Set state to \"Open\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "6f816413.c1f19c",
                "f3ba5c83.673888",
                "8696204a.b59328",
                "64db87ef.287cc8"
            ]
        ]
    },
    {
        "id": "19363649.6bc252",
        "type": "comment",
        "z": "66899f78.ccef5",
        "name": "Open entrace doors, then closes them in 10 seconds",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "14c881ab.baf806",
        "type": "mqtt in",
        "z": "235c2ad5.2abe8e",
        "name": "Command from Telegram",
        "topic": "bus/telegram/command",
        "qos": "0",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "rh": "0",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "a2226804.106bc"
            ]
        ]
    },
    {
        "id": "262f997a.be69fe",
        "type": "switch",
        "z": "235c2ad5.2abe8e",
        "name": "Routing different commands",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "open_doors",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 100,
        "wires": [
            [
                "c154721b.a582c",
                "e0fdfecd.7ebf2",
                "2d7770a0.57c22"
            ]
        ],
        "inputLabels": [
            "Message"
        ],
        "outputLabels": [
            "Open entrance doors (open_doors)"
        ]
    },
    {
        "id": "fae64045.000328",
        "type": "subflow:66899f78.ccef5",
        "z": "235c2ad5.2abe8e",
        "name": "",
        "x": 1240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "abddaab6.ade1f",
        "type": "comment",
        "z": "235c2ad5.2abe8e",
        "name": "Open doors",
        "info": "",
        "x": 930,
        "y": 60,
        "wires": []
    },
    {
        "id": "c154721b.a582c",
        "type": "debug",
        "z": "235c2ad5.2abe8e",
        "name": "Log entry",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "'Doors opening initiated from Telegram'",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "3f43360a.b26fca",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Aquarium door",
        "topic": "modbus/endpointpp/state/aquarium_door_opened",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "2a1eb4d7.4a05bc"
            ]
        ]
    },
    {
        "id": "fe744b3b.fdae48",
        "type": "function",
        "z": "8d261cdd.c349c8",
        "name": "Counting open-close cycles",
        "func": "// Общая идея примерно такая: подбиваем количество falling и \n// rising edges, и на основе этого принимаем решение о том,\n// закрыты или открыты сейчас двери.\n\nlet edgesCounter = context.get('edgesCounter');\n\n// Считаем что rising edges инкрементируют счётчик\nif (msg.payload === 'True')\n  edgesCounter += 1;\n\n// .. а falling edges декрементируют\nelse if (msg.payload === 'False')\n  edgesCounter -= 1;\n\n// Перестраховываемся на случай потенциальных проблем,\n// не давая счётчику выйти за допустимые границы\nif (edgesCounter < 0)\n  edgesCounter = 0;\nelse if (edgesCounter > 8)\n  edgesCounter = 4;\n\n// Если счётчик вышел в ноль, то считаем что двери закрыты\nif (edgesCounter === 0)\n  msg.payload = 'False';\nelse \n  msg.payload = 'True';\n\n// Сохраняем счётчик в стейт\ncontext.set('edgesCounter', edgesCounter);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('edgesCounter', 0);",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 360,
        "wires": [
            [
                "cdd304c0.5debf8"
            ]
        ]
    },
    {
        "id": "cdd304c0.5debf8",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Spotlight in Aquarium",
        "topic": "modbus/endpointpp/set/aquarium_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1040,
        "y": 360,
        "wires": []
    },
    {
        "id": "14c6e2ce.1812ad",
        "type": "switch",
        "z": "8d261cdd.c349c8",
        "name": "Pass \"Door open\" events without delay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "f7f33cd.c5e88c"
            ],
            [
                "34a8192c.685146"
            ]
        ]
    },
    {
        "id": "34a8192c.685146",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "Delay \"door closed\" events for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 680,
        "y": 180,
        "wires": [
            [
                "f7f33cd.c5e88c"
            ]
        ]
    },
    {
        "id": "484c4fb4.1465f",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in the Aquarium",
        "info": "",
        "x": 160,
        "y": 320,
        "wires": []
    },
    {
        "id": "2a1eb4d7.4a05bc",
        "type": "switch",
        "z": "8d261cdd.c349c8",
        "name": "Pass \"Door open\" events without delay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "fe744b3b.fdae48"
            ],
            [
                "c2bb3db0.c2eb5"
            ]
        ]
    },
    {
        "id": "c2bb3db0.c2eb5",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "Delay \"door closed\" events for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 800,
        "y": 460,
        "wires": [
            [
                "fe744b3b.fdae48"
            ]
        ]
    },
    {
        "id": "209f0a34.afb0b6",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Portable Button event",
        "topic": "bus/devices/opener.button/event",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 140,
        "y": 660,
        "wires": [
            [
                "92926308.5c06a8"
            ]
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "37e2034b.da8c5c",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Opening doors by portable button",
        "info": "",
        "x": 180,
        "y": 620,
        "wires": []
    },
    {
        "id": "92926308.5c06a8",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Filter button press event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "down",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "56d79bcc.7ed6c4",
                "b79bfebd.ed9ec"
            ]
        ]
    },
    {
        "id": "1f75c478.f7abfc",
        "type": "mqtt out",
        "z": "5fdbdfda.c7682",
        "name": "Aquarium Lock",
        "topic": "modbus/endpointpp/set/aquarium_door_lock",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 700,
        "y": 220,
        "wires": []
    },
    {
        "id": "1c258d13.43e2c3",
        "type": "switch",
        "z": "5fdbdfda.c7682",
        "name": "Filter valid input values",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "1f75c478.f7abfc"
            ],
            [
                "1f75c478.f7abfc"
            ]
        ]
    },
    {
        "id": "aa6f77ce.e75eb",
        "type": "comment",
        "z": "5fdbdfda.c7682",
        "name": "Filtering only valid input values via this switch",
        "info": "Currently, this block ",
        "x": 330,
        "y": 180,
        "wires": []
    },
    {
        "id": "8696204a.b59328",
        "type": "subflow:5fdbdfda.c7682",
        "z": "66899f78.ccef5",
        "name": "",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "74f0e7d9.8028e8",
        "type": "subflow:5fdbdfda.c7682",
        "z": "66899f78.ccef5",
        "name": "",
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "d9fe22d2.fa203",
        "type": "delay",
        "z": "b3eeeca4.5051b",
        "name": "Waiting 500ms for solenoid to open",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 520,
        "y": 200,
        "wires": [
            [
                "c1e75d7.fba932"
            ]
        ]
    },
    {
        "id": "c1e75d7.fba932",
        "type": "change",
        "z": "b3eeeca4.5051b",
        "name": "Turn Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 200,
        "wires": [
            [
                "9ca4187d.8d7ca"
            ]
        ]
    },
    {
        "id": "9ca4187d.8d7ca",
        "type": "mqtt out",
        "z": "b3eeeca4.5051b",
        "name": "Solenoid",
        "topic": "modbus/endpointpp/set/red_door_lock",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "9e0a2bca.d844b8",
        "type": "change",
        "z": "b3eeeca4.5051b",
        "name": "Set state to \"Open\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "d9fe22d2.fa203",
                "9ca4187d.8d7ca"
            ]
        ]
    },
    {
        "id": "681b0b28.6eede4",
        "type": "comment",
        "z": "b3eeeca4.5051b",
        "name": "Mechanical lock opens by powering the unlocking solenoid for 500ms",
        "info": "",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "64db87ef.287cc8",
        "type": "subflow:b3eeeca4.5051b",
        "z": "66899f78.ccef5",
        "name": "",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "95ba6848.7b6668",
        "type": "mqtt out",
        "z": "81da57ea.a83d2",
        "name": "Portal Indicator",
        "topic": "modbus/endpointpp/set/portal_red_indicator",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "486e7e18.6e66b",
        "type": "switch",
        "z": "81da57ea.a83d2",
        "name": "Filter only valid states",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "95ba6848.7b6668"
            ],
            [
                "95ba6848.7b6668"
            ]
        ]
    },
    {
        "id": "4cd18294.a52114",
        "type": "subflow:81da57ea.a83d2",
        "z": "3f4159ea.cdc276",
        "name": "",
        "env": [],
        "x": 490,
        "y": 160,
        "wires": []
    },
    {
        "id": "a2226804.106bc",
        "type": "function",
        "z": "235c2ad5.2abe8e",
        "name": "Empty retained messages",
        "func": "/**\n * Функция зануляет (опустошает) msg.payload\n * если пакет был принят раньше чем через тридцать секунд\n * после запуска флоу\n */\nif ((Date.now() - context.get('startedAt')) < 30000)\n    msg.payload = '';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "context.set('startedAt', Date.now());",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "262f997a.be69fe"
            ]
        ]
    },
    {
        "id": "f8c0dffa.dec4a8",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Handle the presence switch",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "c22df96d.7675a",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Open aquarium door by aquarium button",
        "info": "",
        "x": 200,
        "y": 760,
        "wires": []
    },
    {
        "id": "b5f61a3.a34a668",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Aquarium Button",
        "topic": "modbus/endpointpp/state/aquarium_button",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 800,
        "wires": [
            [
                "1066c953.09fb87"
            ]
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "1066c953.09fb87",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Filter button press event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 800,
        "wires": [
            [
                "647495b2.e17cec",
                "91949850.5c06f",
                "a257c60d.e106f"
            ]
        ]
    },
    {
        "id": "ad625aa5.95546",
        "type": "subflow:5fdbdfda.c7682",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 810,
        "y": 800,
        "wires": []
    },
    {
        "id": "647495b2.e17cec",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 800,
        "wires": [
            [
                "ad625aa5.95546"
            ]
        ]
    },
    {
        "id": "91949850.5c06f",
        "type": "delay",
        "z": "3f4159ea.cdc276",
        "name": "Wait for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 640,
        "y": 860,
        "wires": [
            [
                "318f6342.f1aabc"
            ]
        ]
    },
    {
        "id": "318f6342.f1aabc",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 860,
        "wires": [
            [
                "9b352ba8.1d4168"
            ]
        ]
    },
    {
        "id": "9b352ba8.1d4168",
        "type": "subflow:5fdbdfda.c7682",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 990,
        "y": 860,
        "wires": []
    },
    {
        "id": "7e78b9f9.6e8ab",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Red door",
        "topic": "modbus/endpointpp/state/red_door_opened",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 420,
        "wires": [
            [
                "2a1eb4d7.4a05bc"
            ]
        ]
    },
    {
        "id": "d944584b.2fb688",
        "type": "mqtt out",
        "z": "aefaaeba.b6c3e",
        "name": "Spotlight in Aquarium",
        "topic": "modbus/endpointpp/set/aquarium_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "38ae88a6.eb3738",
        "type": "change",
        "z": "aefaaeba.b6c3e",
        "name": "Turn ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "d944584b.2fb688",
                "f714bff0.601f68"
            ]
        ]
    },
    {
        "id": "f714bff0.601f68",
        "type": "delay",
        "z": "aefaaeba.b6c3e",
        "name": "Wait 0.35s",
        "pauseType": "delay",
        "timeout": "350",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "7fb187b8.40afc"
            ]
        ]
    },
    {
        "id": "7fb187b8.40afc",
        "type": "change",
        "z": "aefaaeba.b6c3e",
        "name": "Turn OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 180,
        "wires": [
            [
                "d944584b.2fb688"
            ]
        ]
    },
    {
        "id": "e0fdfecd.7ebf2",
        "type": "subflow:aefaaeba.b6c3e",
        "z": "235c2ad5.2abe8e",
        "name": "",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "fae64045.000328"
            ]
        ]
    },
    {
        "id": "e5a81c05.c8f1e",
        "type": "function",
        "z": "bd2beaba.a84ee8",
        "name": "Add timestamp to payload",
        "func": "msg.payload = `[${new Date().toISOString()}] ${msg.payload}`;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 160,
        "wires": [
            [
                "eb0ee375.eb6208"
            ]
        ]
    },
    {
        "id": "eb0ee375.eb6208",
        "type": "file",
        "z": "bd2beaba.a84ee8",
        "name": "Write to bksp.log",
        "filename": "/home/acs/app/log/bksp.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 470,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2d7770a0.57c22",
        "type": "change",
        "z": "235c2ad5.2abe8e",
        "name": "Log Marvin action",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening doors via Telegram",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "7457758b.137014"
            ]
        ]
    },
    {
        "id": "7457758b.137014",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "235c2ad5.2abe8e",
        "name": "",
        "x": 1200,
        "y": 220,
        "wires": []
    },
    {
        "id": "a257c60d.e106f",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log aquarium door action",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening Aquarium door by Aquarium button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 920,
        "wires": [
            [
                "57e85406.1dfadc"
            ]
        ]
    },
    {
        "id": "57e85406.1dfadc",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 950,
        "y": 920,
        "wires": []
    },
    {
        "id": "b79bfebd.ed9ec",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log Portable Button usage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening doors by Portable Button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 660,
        "wires": [
            [
                "1d55ff38.339ba9"
            ]
        ]
    },
    {
        "id": "1d55ff38.339ba9",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 980,
        "y": 660,
        "wires": []
    },
    {
        "id": "1d7d9c6f.939adc",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log Red Button usage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening doors by Red Button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "70b27c84.3061ec"
            ]
        ]
    },
    {
        "id": "70b27c84.3061ec",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 980,
        "y": 520,
        "wires": []
    },
    {
        "id": "c2ac31f0.b686b8",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Turn Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "4fd2723c.3ca984"
            ]
        ]
    },
    {
        "id": "4fd2723c.3ca984",
        "type": "mqtt out",
        "z": "3f4159ea.cdc276",
        "name": "Solenoid",
        "topic": "modbus/endpointpp/set/red_door_lock",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 460,
        "y": 1060,
        "wires": []
    },
    {
        "id": "fb6109a7.b19348",
        "type": "inject",
        "z": "3f4159ea.cdc276",
        "name": "Trigger each 1s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "c2ac31f0.b686b8"
            ]
        ]
    },
    {
        "id": "680eb360.cba7ac",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Disengage unlock pin solenoid each 1s to avoid overheating",
        "info": "",
        "x": 260,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4d66ed76.feec04",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log Presence Switch change",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'Changed Presence Switch to: ' & (payload = 'True' ? 'Open' : 'Closed' )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "28cf8a6e.dacb06"
            ]
        ]
    },
    {
        "id": "28cf8a6e.dacb06",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 760,
        "y": 120,
        "wires": []
    },
    {
        "id": "7c22efbb.233fe",
        "type": "mqtt out",
        "z": "c071b0b7.e8c2c",
        "name": "Left Sockets contactor",
        "topic": "modbus/endpointpp/set/socket_left",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 720,
        "y": 80,
        "wires": []
    },
    {
        "id": "a3ab81a2.ae3b18",
        "type": "switch",
        "z": "c071b0b7.e8c2c",
        "name": "Filter valid input values",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 80,
        "wires": [
            [
                "7c22efbb.233fe"
            ],
            [
                "7c22efbb.233fe"
            ]
        ]
    },
    {
        "id": "b3c06800.883a68",
        "type": "comment",
        "z": "c071b0b7.e8c2c",
        "name": "Filtering only valid input values via this switch",
        "info": "Currently, this block ",
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "1b41d897.3e055f",
        "type": "mqtt out",
        "z": "26622623.6fb4fa",
        "name": "Right Sockets contactor",
        "topic": "modbus/endpointpp/set/socket_right",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 730,
        "y": 80,
        "wires": []
    },
    {
        "id": "374a8c7f.528bc4",
        "type": "switch",
        "z": "26622623.6fb4fa",
        "name": "Filter valid input values",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 80,
        "wires": [
            [
                "1b41d897.3e055f"
            ],
            [
                "1b41d897.3e055f"
            ]
        ]
    },
    {
        "id": "46c5f6e6.12c848",
        "type": "comment",
        "z": "26622623.6fb4fa",
        "name": "Filtering only valid input values via this switch",
        "info": "Currently, this block ",
        "x": 330,
        "y": 40,
        "wires": []
    },
    {
        "id": "8fd799e1.dc2408",
        "type": "change",
        "z": "665b57f6.ada5f8",
        "name": "Convert True to \"1\", everything else to \"0\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"1\" ? \"True\" : \"False\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e55e5218.91d2f8",
        "type": "change",
        "z": "42ea986b.5d61d",
        "name": "Convert \"1\" to True, everything else to \"0\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"True\" ? \"1\" : \"0\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ce61abf7.03b408",
        "type": "subflow:c071b0b7.e8c2c",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 450,
        "y": 200,
        "wires": []
    },
    {
        "id": "4529a4fc.0676bc",
        "type": "subflow:26622623.6fb4fa",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 1020,
        "y": 300,
        "wires": []
    },
    {
        "id": "39c830d.06693d",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Route \"Right Contactor ON\" to delayed path",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "4529a4fc.0676bc"
            ],
            [
                "b654bd05.04b08"
            ]
        ]
    },
    {
        "id": "b654bd05.04b08",
        "type": "delay",
        "z": "3f4159ea.cdc276",
        "name": "Delay 4s",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "2",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 820,
        "y": 340,
        "wires": [
            [
                "4529a4fc.0676bc"
            ]
        ]
    },
    {
        "id": "e64770b9.491ff8",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Delay on right contactor to avoid overloading general circuit breaker",
        "info": "",
        "x": 600,
        "y": 260,
        "wires": []
    },
    {
        "id": "52cbae91.521f88",
        "type": "subflow:66899f78.ccef5",
        "z": "98516876.753508",
        "name": "",
        "env": [],
        "x": 560,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7ba1c964.59dc28",
        "type": "debug",
        "z": "98516876.753508",
        "name": "Log door open for member",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "'Opening doors for: ' & payload",
        "targetType": "jsonata",
        "statusVal": "'Opening doors for: ' & payload",
        "statusType": "auto",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "23d86dfc.1217aa",
        "type": "subflow:aefaaeba.b6c3e",
        "z": "98516876.753508",
        "name": "",
        "x": 290,
        "y": 60,
        "wires": [
            [
                "52cbae91.521f88"
            ]
        ]
    },
    {
        "id": "3d2ac0a1.5011c",
        "type": "change",
        "z": "98516876.753508",
        "name": "Log RFID identification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'Opening doors for: ' & payload",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "dcb7eb7.534bc18"
            ]
        ]
    },
    {
        "id": "dcb7eb7.534bc18",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "98516876.753508",
        "name": "",
        "x": 540,
        "y": 140,
        "wires": []
    },
    {
        "id": "887f9fa.667d2e",
        "type": "subflow:98516876.753508",
        "z": "b99cea79.040428",
        "name": "",
        "x": 780,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9c5f1e1a.02c14",
        "type": "mqtt in",
        "z": "b99cea79.040428",
        "name": "V2: Scanned PAN",
        "topic": "bus/devices/acs-reader/pan",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "rh": "0",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "8f3f89c5.2ab46"
            ]
        ]
    },
    {
        "id": "8f3f89c5.2ab46",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "V2: Verify PAN across residents database",
        "func": "// Fetching member from flow's \"acs-pan\" index by PAN\nconst member = flow.get('acs-pan').get(msg.payload);\n\n// Terminate flow if UID is not found in members database\nif (!member)\n    return null;\n    \n// Otherwise, return member name and continue the flow\nmsg.payload = member;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "887f9fa.667d2e"
            ]
        ]
    },
    {
        "id": "57c5ed16.2e57b4",
        "type": "comment",
        "z": "b99cea79.040428",
        "name": "Handle detected cards PANs",
        "info": "",
        "x": 180,
        "y": 220,
        "wires": []
    },
    {
        "id": "6285e2ff.c3b874",
        "type": "file in",
        "z": "b99cea79.040428",
        "name": "Read \"pan.txt.automation\"",
        "filename": "/home/acs/app/config/pan.txt.automation",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "499453ba.636894",
                "4ef045c4.c5102c"
            ]
        ]
    },
    {
        "id": "2e741baf.0dcb94",
        "type": "watch",
        "z": "b99cea79.040428",
        "name": "Detect PANs database changes",
        "files": "/home/acs/app/config/pan.txt.automation",
        "recursive": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "6285e2ff.c3b874"
            ]
        ]
    },
    {
        "id": "499453ba.636894",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Update PANs database",
        "func": "const uids = msg.payload\n\n    // Split CSV to lines\n    .split('\\n')\n    \n    // Filter empty lines\n    // Both PAN and member name cannot be shorter than one character\n    .filter(entry => entry.length > 2)\n    \n    // Split each line into \"[PAN, Member]\"\n    .map(entry => entry.split(','));\n\n// Create a map out of parsed UID-member pairs\n// Then, commit created Map to flow namespace as \"tags\"\nflow.set('acs-pan', new Map(uids));",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3d9548f2.da8418",
        "type": "comment",
        "z": "b99cea79.040428",
        "name": "Read and update cards database on change",
        "info": "",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "d1c8ea19.5d061",
        "type": "inject",
        "z": "b99cea79.040428",
        "name": "Trigger PAN database fetch on load",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "6285e2ff.c3b874"
            ]
        ]
    },
    {
        "id": "4ef045c4.c5102c",
        "type": "debug",
        "z": "b99cea79.040428",
        "name": "Log database reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "'Reloaded \"V2 PANs\" database'",
        "targetType": "jsonata",
        "statusVal": "'Reloaded \"tags\" database'",
        "statusType": "auto",
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "f7d8ebe2.7bcf58",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Openspace light switch: Hack",
        "topic": "modbus/endpointint/state/hack_light_switch",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 160,
        "y": 560,
        "wires": [
            [
                "ed24f9e9.90c4c8",
                "dc644ca5.48a56",
                "5cba3660.6d1378",
                "d8afd16e.33b86",
                "30cc856a.728f2a",
                "363385d8.80fbca",
                "e74fadca.8e93c"
            ]
        ]
    },
    {
        "id": "ed24f9e9.90c4c8",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Yellow traffic",
        "topic": "modbus/endpointint/set/yellow_traffic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "30cc856a.728f2a",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Red traffic",
        "topic": "modbus/endpointint/set/red_traffic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 470,
        "y": 620,
        "wires": []
    },
    {
        "id": "363385d8.80fbca",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Red light",
        "topic": "modbus/endpointint/set/red_space_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 460,
        "y": 560,
        "wires": []
    },
    {
        "id": "7e221e90.61f9c",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Portable Traffic Light: Green",
        "topic": "bus/devices/traffic-light/green",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 900,
        "y": 920,
        "wires": []
    },
    {
        "id": "dc644ca5.48a56",
        "type": "change",
        "z": "8d261cdd.c349c8",
        "name": "Convert True to \"on\", everything else to \"off\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"True\" ? \"on\" : \"off\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 920,
        "wires": [
            [
                "7e221e90.61f9c"
            ]
        ]
    },
    {
        "id": "5cba3660.6d1378",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Green traffic",
        "topic": "modbus/endpointint/set/green_traffic",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 470,
        "y": 740,
        "wires": []
    },
    {
        "id": "d8afd16e.33b86",
        "type": "change",
        "z": "8d261cdd.c349c8",
        "name": "Convert True to \"on\", everything else to \"off\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload = \"True\" ? \"on\" : \"off\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 860,
        "wires": [
            [
                "a80c7d00.163e2"
            ]
        ]
    },
    {
        "id": "a80c7d00.163e2",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Portable Traffic Light: Red",
        "topic": "bus/devices/traffic-light/red",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 890,
        "y": 860,
        "wires": []
    },
    {
        "id": "13a64af2.992fad",
        "type": "mqtt in",
        "z": "c425948d.c958d8",
        "name": "Scanned barcodes",
        "topic": "bus/devices/openspace-barcode/result",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "779cf9f1.4ec728"
            ]
        ]
    },
    {
        "id": "277979a5.3ee5d6",
        "type": "http request",
        "z": "c425948d.c958d8",
        "name": "VLC: Play URL",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://mediaradio.internal.0x08.in:8090/requests/status.xml?command=in_play&input={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "66b502b2.61a52c",
        "type": "function",
        "z": "c425948d.c958d8",
        "name": "Set authorization headers",
        "func": "msg.headers = {};\nmsg.headers['Authorization'] = 'Basic OmhlbGxva2l0dHk=';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 280,
        "wires": [
            [
                "277979a5.3ee5d6"
            ]
        ]
    },
    {
        "id": "7218bcdd.708bd4",
        "type": "function",
        "z": "c425948d.c958d8",
        "name": "Check is this an URI",
        "func": "const supportedProtos = ['http', 'https', 'ftp'];\nconst proto = msg.payload.substring(0, msg.payload.indexOf(':'));\n\nif (supportedProtos.includes(proto.toLowerCase()))\n    return msg;\nelse\n    return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 280,
        "wires": [
            [
                "66b502b2.61a52c"
            ]
        ]
    },
    {
        "id": "779cf9f1.4ec728",
        "type": "switch",
        "z": "c425948d.c958d8",
        "name": "Parse command",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1337PLAYPAUSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1337MUTE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1337VOLUMEMAX",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 360,
        "y": 220,
        "wires": [
            [
                "5c2c2c28.8d5c24"
            ],
            [
                "b32d5519.af32d8"
            ],
            [
                "81637719.d87468"
            ],
            [
                "7218bcdd.708bd4"
            ]
        ],
        "inputLabels": [
            "Barcode Content"
        ],
        "outputLabels": [
            "Play/Pause",
            "Mute",
            "Volume max",
            "Unknown command"
        ]
    },
    {
        "id": "74317034.2fcfc8",
        "type": "http request",
        "z": "c425948d.c958d8",
        "name": "VLC: Toggle play/pause",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://mediaradio.internal.0x08.in:8090/requests/status.xml?command=pl_pause",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1050,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5c2c2c28.8d5c24",
        "type": "function",
        "z": "c425948d.c958d8",
        "name": "Set authorization headers",
        "func": "msg.headers = {};\nmsg.headers['Authorization'] = 'Basic OmhlbGxva2l0dHk=';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 160,
        "wires": [
            [
                "74317034.2fcfc8"
            ]
        ]
    },
    {
        "id": "b5a4374b.8dfc4",
        "type": "http request",
        "z": "c425948d.c958d8",
        "name": "VLC: Mute",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://mediaradio.internal.0x08.in:8090/requests/status.xml?command=volume&val=0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1010,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b32d5519.af32d8",
        "type": "function",
        "z": "c425948d.c958d8",
        "name": "Set authorization headers",
        "func": "msg.headers = {};\nmsg.headers['Authorization'] = 'Basic OmhlbGxva2l0dHk=';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "b5a4374b.8dfc4"
            ]
        ]
    },
    {
        "id": "61822ae9.169eac",
        "type": "http request",
        "z": "c425948d.c958d8",
        "name": "VLC: Volume max",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://mediaradio.internal.0x08.in:8090/requests/status.xml?command=volume&val=255",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1030,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "81637719.d87468",
        "type": "function",
        "z": "c425948d.c958d8",
        "name": "Set authorization headers",
        "func": "msg.headers = {};\nmsg.headers['Authorization'] = 'Basic OmhlbGxva2l0dHk=';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 240,
        "wires": [
            [
                "61822ae9.169eac"
            ]
        ]
    },
    {
        "id": "f8212e2e.e7ff",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Light x1 y1",
        "topic": "modbus/endpointint/set/light_11",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 630,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c5b4bf76.513b4",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Light x2 y1",
        "topic": "modbus/endpointint/set/light_21",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 630,
        "y": 1220,
        "wires": []
    },
    {
        "id": "43d43cfb.a7e444",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Light x2 y2",
        "topic": "modbus/endpointint/set/light_22",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 630,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b371086a.702078",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Light x1 y2",
        "topic": "modbus/endpointint/set/light_12",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 630,
        "y": 1100,
        "wires": []
    },
    {
        "id": "85929e0e.75d72",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Openspace light switch: Main",
        "topic": "modbus/endpointint/state/main_light_switch",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "461ebbdf.d1a254",
                "f8212e2e.e7ff"
            ]
        ]
    },
    {
        "id": "e74fadca.8e93c",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Hacklight: PDU strip on ceiling",
        "topic": "modbus/endpointint/set/hack_light_220",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 530,
        "y": 800,
        "wires": []
    },
    {
        "id": "461ebbdf.d1a254",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "68199353.01f81c",
                "b371086a.702078"
            ]
        ]
    },
    {
        "id": "68199353.01f81c",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 430,
        "y": 1160,
        "wires": [
            [
                "b86c6f36.ff01d",
                "43d43cfb.a7e444"
            ]
        ]
    },
    {
        "id": "b86c6f36.ff01d",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 430,
        "y": 1220,
        "wires": [
            [
                "c5b4bf76.513b4"
            ]
        ]
    },
    {
        "id": "8fe69d25.d2dcb8",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Openspace hacklight",
        "info": "",
        "x": 140,
        "y": 520,
        "wires": []
    },
    {
        "id": "f598fb6b.eea88",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Openspace general lighting",
        "info": "",
        "x": 160,
        "y": 1000,
        "wires": []
    },
    {
        "id": "328b6d06.6ad0da",
        "type": "file in",
        "z": "b99cea79.040428",
        "name": "Read UID file",
        "filename": "/home/acs/app/config/uid.txt.automation",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "x": 450,
        "y": 460,
        "wires": [
            [
                "5f1857ad.b60df8",
                "cc7dc74b.fdca4"
            ]
        ]
    },
    {
        "id": "15f5124c.cfc1f6",
        "type": "watch",
        "z": "b99cea79.040428",
        "name": "Watch UID file for changes",
        "files": "/home/acs/app/config/uid.txt.automation",
        "recursive": "",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "328b6d06.6ad0da"
            ]
        ]
    },
    {
        "id": "5f1857ad.b60df8",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Update tags database",
        "func": "// Extract entries for payload\nconst uids = msg.payload\n\n    // Split CSV to lines\n    .split('\\n')\n    \n    // Filter empty lines\n    // Both UID and member name cannot be shorter than one character\n    .filter(entry => entry.length > 3)\n    \n    // Split each line into \"[UID, Member]\"\n    .map(entry => entry.toLowerCase().split(','));\n\n// Create a map out of parsed UID-member pairs\n// Then, commit created Map to flow namespace as \"tags\"\nflow.set('acs_rfid_uids', new Map(uids));",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "623c9f40.8b9e2",
        "type": "comment",
        "z": "b99cea79.040428",
        "name": "Handle UID database",
        "info": "",
        "x": 160,
        "y": 420,
        "wires": []
    },
    {
        "id": "1a2e58d9.e8dd3f",
        "type": "inject",
        "z": "b99cea79.040428",
        "name": "Trigger UID file read on launch",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "328b6d06.6ad0da"
            ]
        ]
    },
    {
        "id": "cc7dc74b.fdca4",
        "type": "debug",
        "z": "b99cea79.040428",
        "name": "Log database reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "'Reloaded \"tags\" database'",
        "targetType": "jsonata",
        "statusVal": "'Reloaded \"tags\" database'",
        "statusType": "auto",
        "x": 880,
        "y": 500,
        "wires": []
    },
    {
        "id": "6e263f1d.244d9",
        "type": "mqtt in",
        "z": "b99cea79.040428",
        "name": "Reader (Gen. 1): Scanned UID",
        "topic": "modbus/rfid/state/uid",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "rh": "0",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "8017ccd9.3ce9"
            ]
        ]
    },
    {
        "id": "8017ccd9.3ce9",
        "type": "switch",
        "z": "b99cea79.040428",
        "name": "Discard \"No Card\" value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0000000000000000000000000000000000000000",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 620,
        "wires": [
            [
                "c4925999.388ab8"
            ]
        ]
    },
    {
        "id": "5623f2e3.7bdbec",
        "type": "comment",
        "z": "b99cea79.040428",
        "name": "Handle tag's UID",
        "info": "",
        "x": 140,
        "y": 580,
        "wires": []
    },
    {
        "id": "8fc0e10f.1ca51",
        "type": "mqtt in",
        "z": "b99cea79.040428",
        "name": "Reader (Gen. 2): Scanned UID",
        "topic": "bus/devices/acs-reader/uid",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "rh": "0",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "9d161cf7.9d319"
            ]
        ]
    },
    {
        "id": "8e359fb7.5bac1",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Verify UID",
        "func": "/**\n * Normalize every UID to 7-byte lower case\n * @param {String} uid UID to normalize\n * @returns {String} Normalized UID\n */\nconst normalizeUid = uid => {\n    \n    if (uid.length === 0 || uid.length > 14)\n        return null;\n    \n    if (uid.length === 14)\n        return uid.toLowerCase();\n        \n    const paddingSize = 14 - uid.length;\n    return uid.toUpperCase().concat(('0').repeat(paddingSize));\n    \n};\n\n// Getting member name by UID from the flow's \"acs-uid\" index\nconst member = flow.get('acs_rfid_uids').get(normalizeUid(msg.payload));\n\n// Terminate flow if UID is not found in members database\nif (!member)\n    return null;\n    \n// Otherwise, return member name and continue the flow\nmsg.payload = member;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 680,
        "wires": [
            [
                "90d748b6.8baa8"
            ]
        ]
    },
    {
        "id": "9d161cf7.9d319",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Throttle UIDs",
        "func": "const THROTTLE_INTERVAL = 1000;\n\nconst cacheEntry = this.context.get('cache').get(msg.payload);\n\n// Update last raise time for this UID\nthis.context.get('cache').set(msg.payload, Date.now())\n\n// No entry, pass as is\nif (!cacheEntry) {\n    return msg;\n}\n    \n// Entry exists & TTL is passed\nif ((Date.now() - cacheEntry) >= THROTTLE_INTERVAL) {\n    return msg;\n}\n\n// Entry exists, but TTL is not passed yet\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "this.context.set('cache', new Map())",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "8e359fb7.5bac1"
            ]
        ]
    },
    {
        "id": "90d748b6.8baa8",
        "type": "subflow:98516876.753508",
        "z": "b99cea79.040428",
        "name": "",
        "env": [],
        "x": 900,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "c4925999.388ab8",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Convert UID to Gen. 2 format",
        "func": "// Well, this shit works times faster than any other option\nlet uid = '';\nuid += msg.payload.substring(2, 4)\nuid += msg.payload.substring(6, 8)\nuid += msg.payload.substring(10, 12)\nuid += msg.payload.substring(14, 16)\nuid += msg.payload.substring(18, 20)\nuid += msg.payload.substring(22, 24)\nuid += msg.payload.substring(26, 28)\nreturn { ...msg, payload: uid };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 620,
        "wires": [
            [
                "8e359fb7.5bac1"
            ]
        ]
    }
]
