"type","topic","col2","col3","col4","col5","col6"
# DO NOT REMOVE THE FIRST LINE!
# Example register definition file.
#
# You need to define a Poller and then one or more References for that poller.
# The Poller will 'poll' the slaveid and bring back 1 or more registers/bits.
# The References must then match up with the polled range to define the topic for each.
#################################################################################
# Poller-object
# Columns:
# type, topic, slaveid, reference, size, functioncode, rate
#  
# Possible values for columns:
# type: poll
# topic: any string without spaces
# slaveid: integer 1 to 254
# reference: integer 0 to 65535 (Modbus references are as transmitted on the wire.
# In the traditional numbering scheme these would have been called offsets. E. g. to
# read 400020 you would use reference 20.)
# size: integer 0 to 65535 (No. of registers to poll, value must not exceed the limits of Modbus of course)
# functionscode: coil, input_status, holding_register, input_register, input_register_32BE
# rate: float 0.0 to some really big number
#
# functionscode equivalents: coil, input_status, holding_register, input_register, input_register_32BE
#                              1        2                3                4                  4
#
# Example poller-object:
# poll,someTopic,1,2,5,coil,1.0
# Will poll states of 5 coils from slave device 1 once a second, starting at coil 2.
#
#################################################################################
# Reference-Object
# Columns:
# type, topic, reference, rw,      ,        
# type: ref
# topic: any string without spaces
# reference: integer 0 to 65535 (This is the modbus offset and should match the poller ref)
# rw: r, w or rw
# data type (registers only): uint16, uint32BE, uint32LE, int16, int32BE, int32LE, string (defaults to uint16)
#
# Example reference-object:
# ref,light0,2,rw
# The state of coil 2 will be published to mqtt with the topic modbus/someTopic/state/light0
# if column 3 contains an 'r'.
# If you publish a value (in case of a coil: True or False) to modbus/someTopic/set/light0 and
# column 3 contains a 'w', the new state will be written to the slave device.
# 
#################################################################################
# Columns:
# type, topic, slaveid, reference, size, functioncode, rate
# type, topic, reference, rw, data type,        
#
poll,endpointpp,11,268,4,input_status,0.1
ref,prescene_switch,268,r
ref,aquarium_door_opened,269,r
ref,red_door_opened,270,r
ref,portal_door_opened,271,r

poll,endpointpp,11,48,3,coil,0.1
ref,aquarium_light,48,rw
ref,portal_light,49,rw
ref,sockets,50,rw

poll,endpointpp,11,16,1,coil,0.1
ref,aquarium_door_lock,16,rw

poll,endpointpp,11,20,1,coil,0.1
ref,aquarium_signage,20,rw

poll,endpointpp,11,23,1,coil,0.1
ref,red_door_lock,23,rw

poll,rfid,2,768,10,input_register,0.1
ref,uid,768,r,hex20

poll,pauk,1,12293,1,input_register,0.5
ref,btn,12293,r

poll,pauk,1,8,5,coil,0.5
ref,led1,8,rw
ref,led2,9,rw
ref,led3,10,rw
ref,led4,11,rw
ref,led5,12,rw
