[
    {
        "id": "3f4159ea.cdc276",
        "type": "tab",
        "label": "Door & Presence",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8d261cdd.c349c8",
        "type": "tab",
        "label": "Lights",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b99cea79.040428",
        "type": "tab",
        "label": "Access Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "235c2ad5.2abe8e",
        "type": "tab",
        "label": "Telegram Bot",
        "disabled": false,
        "info": ""
    },
    {
        "id": "66899f78.ccef5",
        "type": "subflow",
        "name": "Open doors for 10 seconds",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "14395c5c.ef7a44"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 360,
                "wires": [
                    {
                        "id": "db1f52f8.2b3318",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5fdbdfda.c7682",
        "type": "subflow",
        "name": "Control Aquarium Lock",
        "info": "# Control Aquarium Lock\nThis subflow controls the aquarium lock state (magnetic lock on the external door).\n\n## Input\nReceives \"True\" and \"False\" as strings.\n\n    - **True** — Locks the door\n    - **False** — Unlocks the door",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 220,
                "wires": [
                    {
                        "id": "1c258d13.43e2c3"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "State"
        ]
    },
    {
        "id": "b3eeeca4.5051b",
        "type": "subflow",
        "name": "Open Red Door",
        "info": "Open Red Door\n=====\nThis subflows unlocks the Red Door's electromechanical lock.\n\n**Notice:** due to the architecture of this lock, it canno't be closed without direct physical iteraction, i.e. you can close it only IRL.",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 160,
                "wires": [
                    {
                        "id": "9e0a2bca.d844b8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "58c54541.215b4c",
        "type": "subflow",
        "name": "Control El-Wire Signage",
        "info": "# Control El-Wire Signage\nControls el-wire logotype signage in aquarium\n\n# Input\nReceives a string with \"True\" or \"False\".\n\n    - **True** — turns signage on\n    - **False** — turns signage off",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 240,
                "wires": [
                    {
                        "id": "e6d2914f.cbfa68"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "State"
        ],
        "icon": "node-red/light.svg"
    },
    {
        "id": "81da57ea.a83d2",
        "type": "subflow",
        "name": "Control Portal Panel Indicator",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 260,
                "wires": [
                    {
                        "id": "486e7e18.6e66b"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/light.svg"
    },
    {
        "id": "aefaaeba.b6c3e",
        "type": "subflow",
        "name": "Blink Aquarium Spotlight",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 180,
                "wires": [
                    {
                        "id": "38ae88a6.eb3738"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 180,
                "wires": [
                    {
                        "id": "7fb187b8.40afc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/light.svg"
    },
    {
        "id": "bd2beaba.a84ee8",
        "type": "subflow",
        "name": "Log payload into BKSP logfile",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "e5a81c05.c8f1e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "12539a43.97344e",
        "type": "mqtt-broker",
        "name": "Corleone",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a06f06f2.159d08",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Presence Switch",
        "topic": "modbus/endpointpp/state/presence_switch",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "b029c600.d00af",
                "1438a3ac.960e8c",
                "4d66ed76.feec04"
            ]
        ],
        "outputLabels": [
            "Presence"
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "2e479e6a.815b22",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Turn Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 280,
        "wires": [
            [
                "4cd18294.a52114"
            ]
        ]
    },
    {
        "id": "f97efe8f.d2e788",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Turn On",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 320,
        "wires": [
            [
                "87bad167.ca4578",
                "4cd18294.a52114"
            ]
        ]
    },
    {
        "id": "87bad167.ca4578",
        "type": "delay",
        "z": "3f4159ea.cdc276",
        "name": "Wait 100ms",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 870,
        "y": 360,
        "wires": [
            [
                "babe5d9a.6a4cf8"
            ]
        ]
    },
    {
        "id": "b029c600.d00af",
        "type": "trigger",
        "z": "3f4159ea.cdc276",
        "name": "Trigger each 2s while presence is ON",
        "op1": "",
        "op2": "1",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-2100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "False",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "2e479e6a.815b22",
                "f97efe8f.d2e788"
            ]
        ]
    },
    {
        "id": "babe5d9a.6a4cf8",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Turn Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 360,
        "wires": [
            [
                "4cd18294.a52114"
            ]
        ]
    },
    {
        "id": "825dfc66.622e08",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Portal Red Button",
        "topic": "modbus/endpointpp/state/portal_red_button",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 460,
        "wires": [
            [
                "4b3547e5.2a7f4"
            ]
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "a971a3df.581b18",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Opening doors with red button",
        "info": "",
        "x": 160,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b3547e5.2a7f4",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Filter button press event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "56d79bcc.7ed6c4",
                "1d7d9c6f.939adc"
            ]
        ]
    },
    {
        "id": "623c46d.386b9b8",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Portal door",
        "topic": "modbus/endpointpp/state/portal_door_opened",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 80,
        "y": 100,
        "wires": [
            [
                "14c6e2ce.1812ad"
            ]
        ]
    },
    {
        "id": "2309ddcc.1caf32",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Red door",
        "topic": "modbus/endpointpp/state/red_door_opened",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 80,
        "y": 180,
        "wires": [
            [
                "14c6e2ce.1812ad"
            ]
        ]
    },
    {
        "id": "f7f33cd.c5e88c",
        "type": "function",
        "z": "8d261cdd.c349c8",
        "name": "Counting open-close cycles",
        "func": "// Общая идея примерно такая: подбиваем количество falling и \n// rising edges, и на основе этого принимаем решение о том,\n// закрыты или открыты сейчас двери.\n\nlet edgesCounter = context.get('edgesCounter');\n\n// Считаем что rising edges инкрементируют счётчик\nif (msg.payload === 'True')\n  edgesCounter += 1;\n\n// .. а falling edges декрементируют\nelse if (msg.payload === 'False')\n  edgesCounter -= 1;\n\n// Перестраховываемся на случай потенциальных проблем,\n// не давая счётчику выйти за допустимые границы\nif (edgesCounter < 0)\n  edgesCounter = 0;\nelse if (edgesCounter > 8)\n  edgesCounter = 2;\n\n// Если счётчик вышел в ноль, то считаем что двери закрыты\nif (edgesCounter === 0)\n  msg.payload = 'False';\nelse \n  msg.payload = 'True';\n\n// Сохраняем счётчик в стейт\ncontext.set('edgesCounter', edgesCounter);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('edgesCounter', 0);",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "161ed421.2925dc"
            ]
        ]
    },
    {
        "id": "161ed421.2925dc",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in Portal",
        "topic": "modbus/endpointpp/set/portal_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1220,
        "y": 140,
        "wires": []
    },
    {
        "id": "e23d279e.d55498",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in the Portal Area",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "ad721374.d2f5",
        "type": "mqtt in",
        "z": "b99cea79.040428",
        "name": "Scanned tag UID",
        "topic": "modbus/rfid/state/uid",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "6e538027.bba2b8"
            ]
        ]
    },
    {
        "id": "a3a6a1bd.05c3e8",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Verify UID across members database",
        "func": "// Getting member name by UID from the flow's \"tags\" map\nconst member = flow.get('tags').get(msg.payload.toLowerCase());\n\n// Terminate flow if UID is not found in members database\nif (!member)\n    return null;\n    \n// Otherwise, return member name and continue the flow\nmsg.payload = member;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 340,
        "wires": [
            [
                "b869eea7.e76288",
                "7d1145e1.4e491c",
                "e682e85c.3552a8"
            ]
        ]
    },
    {
        "id": "6f816413.c1f19c",
        "type": "mqtt out",
        "z": "66899f78.ccef5",
        "name": "Opening entrance door lock",
        "topic": "bus/devices/portal.reddoor/lock/set",
        "qos": "",
        "retain": "",
        "broker": "12539a43.97344e",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "db1f52f8.2b3318",
        "type": "change",
        "z": "66899f78.ccef5",
        "name": "Set state to \"Close\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 300,
        "wires": [
            [
                "74f0e7d9.8028e8"
            ]
        ]
    },
    {
        "id": "f3ba5c83.673888",
        "type": "delay",
        "z": "66899f78.ccef5",
        "name": "Wait 10s",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 460,
        "y": 300,
        "wires": [
            [
                "db1f52f8.2b3318"
            ]
        ]
    },
    {
        "id": "56d79bcc.7ed6c4",
        "type": "subflow:66899f78.ccef5",
        "z": "3f4159ea.cdc276",
        "name": "",
        "env": [],
        "x": 700,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9e4e4e8a.a8cf1",
        "type": "comment",
        "z": "b99cea79.040428",
        "name": "Open doors when registerd RFID tag is bringed up to reader",
        "info": "",
        "x": 280,
        "y": 300,
        "wires": []
    },
    {
        "id": "50e518a7.cc392",
        "type": "subflow:66899f78.ccef5",
        "z": "b99cea79.040428",
        "name": "",
        "env": [],
        "x": 1280,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b869eea7.e76288",
        "type": "debug",
        "z": "b99cea79.040428",
        "name": "Log door open for member",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "'Opening doors for: ' & payload",
        "targetType": "jsonata",
        "statusVal": "'Opening doors for: ' & payload",
        "statusType": "auto",
        "x": 1020,
        "y": 380,
        "wires": []
    },
    {
        "id": "6e538027.bba2b8",
        "type": "switch",
        "z": "b99cea79.040428",
        "name": "Filter \"No Card\" value",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0000000000000000000000000000000000000000",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "a3a6a1bd.05c3e8",
                "23a549.19e202b8"
            ]
        ]
    },
    {
        "id": "685e059a.7586f4",
        "type": "file in",
        "z": "b99cea79.040428",
        "name": "Read ids.txt.automation file",
        "filename": "/home/acs/app/config/ids.txt.automation",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "38f512e1.ef8af6",
                "31e8533f.3ca60c"
            ]
        ]
    },
    {
        "id": "d73748ac.683bb",
        "type": "watch",
        "z": "b99cea79.040428",
        "name": "Watch ids.txt.automation for changes",
        "files": "/home/acs/app/config/ids.txt.automation",
        "recursive": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "685e059a.7586f4"
            ]
        ]
    },
    {
        "id": "38f512e1.ef8af6",
        "type": "function",
        "z": "b99cea79.040428",
        "name": "Update tags database",
        "func": "// Extract entries for payload\nconst uids = msg.payload\n\n    // Split CSV to lines\n    .split('\\n')\n    \n    // Filter empty lines\n    // Both UID and member name cannot be shorter than one character\n    .filter(entry => entry.length > 2)\n    \n    // Split each line into \"[UID, Member]\"\n    .map(entry => entry.toLowerCase().split(','));\n\n// Create a map out of parsed UID-member pairs\n// Then, commit created Map to flow namespace as \"tags\"\nflow.set('tags', new Map(uids));",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f8a0d2ca.0bbba",
        "type": "comment",
        "z": "b99cea79.040428",
        "name": "Read and update tags database on change",
        "info": "",
        "x": 220,
        "y": 100,
        "wires": []
    },
    {
        "id": "6206fc20.58509c",
        "type": "inject",
        "z": "b99cea79.040428",
        "name": "Forcefully trigger ids.txt.automation file read on start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "685e059a.7586f4"
            ]
        ]
    },
    {
        "id": "14395c5c.ef7a44",
        "type": "change",
        "z": "66899f78.ccef5",
        "name": "Set state to \"Open\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "6f816413.c1f19c",
                "f3ba5c83.673888",
                "8696204a.b59328",
                "64db87ef.287cc8"
            ]
        ]
    },
    {
        "id": "19363649.6bc252",
        "type": "comment",
        "z": "66899f78.ccef5",
        "name": "Open entrace doors, then closes them in 10 seconds",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "14c881ab.baf806",
        "type": "mqtt in",
        "z": "235c2ad5.2abe8e",
        "name": "Command from Telegram",
        "topic": "bus/telegram/command",
        "qos": "0",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "a2226804.106bc"
            ]
        ]
    },
    {
        "id": "262f997a.be69fe",
        "type": "switch",
        "z": "235c2ad5.2abe8e",
        "name": "Routing different commands",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "open_doors",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 100,
        "wires": [
            [
                "c154721b.a582c",
                "e0fdfecd.7ebf2",
                "2d7770a0.57c22"
            ]
        ],
        "inputLabels": [
            "Message"
        ],
        "outputLabels": [
            "Open entrance doors (open_doors)"
        ]
    },
    {
        "id": "fae64045.000328",
        "type": "subflow:66899f78.ccef5",
        "z": "235c2ad5.2abe8e",
        "name": "",
        "x": 1240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "abddaab6.ade1f",
        "type": "comment",
        "z": "235c2ad5.2abe8e",
        "name": "Open doors",
        "info": "",
        "x": 930,
        "y": 60,
        "wires": []
    },
    {
        "id": "c154721b.a582c",
        "type": "debug",
        "z": "235c2ad5.2abe8e",
        "name": "Log entry",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "'Doors opening initiated from Telegram'",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "23a549.19e202b8",
        "type": "debug",
        "z": "b99cea79.040428",
        "name": "Log UID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "'Tag found: ' & payload",
        "targetType": "jsonata",
        "statusVal": "'Tag found: ' & payload",
        "statusType": "auto",
        "x": 580,
        "y": 380,
        "wires": []
    },
    {
        "id": "31e8533f.3ca60c",
        "type": "debug",
        "z": "b99cea79.040428",
        "name": "Log database reload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "'Reloaded \"tags\" database'",
        "targetType": "jsonata",
        "statusVal": "'Reloaded \"tags\" database'",
        "statusType": "auto",
        "x": 880,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f43360a.b26fca",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Aquarium door",
        "topic": "modbus/endpointpp/state/aquarium_door_opened",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 100,
        "y": 360,
        "wires": [
            [
                "2a1eb4d7.4a05bc"
            ]
        ]
    },
    {
        "id": "fe744b3b.fdae48",
        "type": "function",
        "z": "8d261cdd.c349c8",
        "name": "Counting open-close cycles",
        "func": "// Общая идея примерно такая: подбиваем количество falling и \n// rising edges, и на основе этого принимаем решение о том,\n// закрыты или открыты сейчас двери.\n\nlet edgesCounter = context.get('edgesCounter');\n\n// Считаем что rising edges инкрементируют счётчик\nif (msg.payload === 'True')\n  edgesCounter += 1;\n\n// .. а falling edges декрементируют\nelse if (msg.payload === 'False')\n  edgesCounter -= 1;\n\n// Перестраховываемся на случай потенциальных проблем,\n// не давая счётчику выйти за допустимые границы\nif (edgesCounter < 0)\n  edgesCounter = 0;\nelse if (edgesCounter > 8)\n  edgesCounter = 4;\n\n// Если счётчик вышел в ноль, то считаем что двери закрыты\nif (edgesCounter === 0)\n  msg.payload = 'False';\nelse \n  msg.payload = 'True';\n\n// Сохраняем счётчик в стейт\ncontext.set('edgesCounter', edgesCounter);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set('edgesCounter', 0);",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "cdd304c0.5debf8"
            ]
        ]
    },
    {
        "id": "cdd304c0.5debf8",
        "type": "mqtt out",
        "z": "8d261cdd.c349c8",
        "name": "Spotlight in Aquarium",
        "topic": "modbus/endpointpp/set/aquarium_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 1260,
        "y": 400,
        "wires": []
    },
    {
        "id": "14c6e2ce.1812ad",
        "type": "switch",
        "z": "8d261cdd.c349c8",
        "name": "Pass \"Door open\" events without delay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "f7f33cd.c5e88c"
            ],
            [
                "34a8192c.685146"
            ]
        ]
    },
    {
        "id": "34a8192c.685146",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "Delay \"door closed\" events for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 660,
        "y": 180,
        "wires": [
            [
                "f7f33cd.c5e88c"
            ]
        ]
    },
    {
        "id": "484c4fb4.1465f",
        "type": "comment",
        "z": "8d261cdd.c349c8",
        "name": "Ceiling light in the Aquarium",
        "info": "",
        "x": 140,
        "y": 320,
        "wires": []
    },
    {
        "id": "2a1eb4d7.4a05bc",
        "type": "switch",
        "z": "8d261cdd.c349c8",
        "name": "Pass \"Door open\" events without delay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 400,
        "wires": [
            [
                "fe744b3b.fdae48"
            ],
            [
                "c2bb3db0.c2eb5"
            ]
        ]
    },
    {
        "id": "c2bb3db0.c2eb5",
        "type": "delay",
        "z": "8d261cdd.c349c8",
        "name": "Delay \"door closed\" events for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 700,
        "y": 460,
        "wires": [
            [
                "fe744b3b.fdae48"
            ]
        ]
    },
    {
        "id": "209f0a34.afb0b6",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Portable Button event",
        "topic": "bus/devices/opener.button/event",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 140,
        "y": 660,
        "wires": [
            [
                "92926308.5c06a8"
            ]
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "37e2034b.da8c5c",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Opening doors by portable button",
        "info": "",
        "x": 170,
        "y": 620,
        "wires": []
    },
    {
        "id": "a2076dd3.dd30c",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Blink on portal panel indicator",
        "info": "",
        "x": 400,
        "y": 240,
        "wires": []
    },
    {
        "id": "92926308.5c06a8",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Filter button press event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "down",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "56d79bcc.7ed6c4",
                "b79bfebd.ed9ec"
            ]
        ]
    },
    {
        "id": "1f75c478.f7abfc",
        "type": "mqtt out",
        "z": "5fdbdfda.c7682",
        "name": "Aquarium Lock",
        "topic": "modbus/endpointpp/set/aquarium_door_lock",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 700,
        "y": 220,
        "wires": []
    },
    {
        "id": "1c258d13.43e2c3",
        "type": "switch",
        "z": "5fdbdfda.c7682",
        "name": "Filter valid input values",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "1f75c478.f7abfc"
            ],
            [
                "1f75c478.f7abfc"
            ]
        ]
    },
    {
        "id": "aa6f77ce.e75eb",
        "type": "comment",
        "z": "5fdbdfda.c7682",
        "name": "Filtering only valid input values via this switch",
        "info": "Currently, this block ",
        "x": 330,
        "y": 180,
        "wires": []
    },
    {
        "id": "8696204a.b59328",
        "type": "subflow:5fdbdfda.c7682",
        "z": "66899f78.ccef5",
        "name": "",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "74f0e7d9.8028e8",
        "type": "subflow:5fdbdfda.c7682",
        "z": "66899f78.ccef5",
        "name": "",
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "d9fe22d2.fa203",
        "type": "delay",
        "z": "b3eeeca4.5051b",
        "name": "Waiting 500ms for solenoid to open",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 520,
        "y": 200,
        "wires": [
            [
                "c1e75d7.fba932"
            ]
        ]
    },
    {
        "id": "c1e75d7.fba932",
        "type": "change",
        "z": "b3eeeca4.5051b",
        "name": "Turn Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 200,
        "wires": [
            [
                "9ca4187d.8d7ca"
            ]
        ]
    },
    {
        "id": "9ca4187d.8d7ca",
        "type": "mqtt out",
        "z": "b3eeeca4.5051b",
        "name": "Solenoid",
        "topic": "modbus/endpointpp/set/red_door_lock",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "9e0a2bca.d844b8",
        "type": "change",
        "z": "b3eeeca4.5051b",
        "name": "Set state to \"Open\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "d9fe22d2.fa203",
                "9ca4187d.8d7ca"
            ]
        ]
    },
    {
        "id": "681b0b28.6eede4",
        "type": "comment",
        "z": "b3eeeca4.5051b",
        "name": "Mechanical lock opens by powering the unlocking solenoid for 500ms",
        "info": "",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "64db87ef.287cc8",
        "type": "subflow:b3eeeca4.5051b",
        "z": "66899f78.ccef5",
        "name": "",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "41ba4ece.605b88",
        "type": "mqtt out",
        "z": "58c54541.215b4c",
        "name": "El-Wire Signage",
        "topic": "modbus/endpointpp/set/aquarium_signage",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 520,
        "y": 240,
        "wires": []
    },
    {
        "id": "e6d2914f.cbfa68",
        "type": "switch",
        "z": "58c54541.215b4c",
        "name": "Filter only valid states",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 240,
        "wires": [
            [
                "41ba4ece.605b88"
            ],
            [
                "41ba4ece.605b88"
            ]
        ]
    },
    {
        "id": "1438a3ac.960e8c",
        "type": "subflow:58c54541.215b4c",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 390,
        "y": 120,
        "wires": []
    },
    {
        "id": "95ba6848.7b6668",
        "type": "mqtt out",
        "z": "81da57ea.a83d2",
        "name": "Portal Indicator",
        "topic": "modbus/endpointpp/set/portal_red_indicator",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "486e7e18.6e66b",
        "type": "switch",
        "z": "81da57ea.a83d2",
        "name": "Filter only valid states",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "True",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "95ba6848.7b6668"
            ],
            [
                "95ba6848.7b6668"
            ]
        ]
    },
    {
        "id": "4cd18294.a52114",
        "type": "subflow:81da57ea.a83d2",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 1260,
        "y": 280,
        "wires": []
    },
    {
        "id": "a2226804.106bc",
        "type": "function",
        "z": "235c2ad5.2abe8e",
        "name": "Empty retained messages",
        "func": "/**\n * Функция зануляет (опустошает) msg.payload\n * если пакет был принят раньше чем через тридцать секунд\n * после запуска флоу\n */\nif ((Date.now() - context.get('startedAt')) < 30000)\n    msg.payload = '';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "context.set('startedAt', Date.now());",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "262f997a.be69fe"
            ]
        ]
    },
    {
        "id": "f8c0dffa.dec4a8",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Handle the presence switch",
        "info": "",
        "x": 160,
        "y": 80,
        "wires": []
    },
    {
        "id": "c22df96d.7675a",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Open aquarium door by aquarium button",
        "info": "",
        "x": 200,
        "y": 760,
        "wires": []
    },
    {
        "id": "b5f61a3.a34a668",
        "type": "mqtt in",
        "z": "3f4159ea.cdc276",
        "name": "Aquarium Button",
        "topic": "modbus/endpointpp/state/aquarium_button",
        "qos": "2",
        "datatype": "utf8",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 800,
        "wires": [
            [
                "1066c953.09fb87"
            ]
        ],
        "icon": "font-awesome/fa-arrow-circle-right"
    },
    {
        "id": "1066c953.09fb87",
        "type": "switch",
        "z": "3f4159ea.cdc276",
        "name": "Filter button press event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "False",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 800,
        "wires": [
            [
                "647495b2.e17cec",
                "91949850.5c06f",
                "a257c60d.e106f"
            ]
        ]
    },
    {
        "id": "ad625aa5.95546",
        "type": "subflow:5fdbdfda.c7682",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 780,
        "y": 800,
        "wires": []
    },
    {
        "id": "647495b2.e17cec",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 800,
        "wires": [
            [
                "ad625aa5.95546"
            ]
        ]
    },
    {
        "id": "91949850.5c06f",
        "type": "delay",
        "z": "3f4159ea.cdc276",
        "name": "Wait for 5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 610,
        "y": 860,
        "wires": [
            [
                "318f6342.f1aabc"
            ]
        ]
    },
    {
        "id": "318f6342.f1aabc",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 860,
        "wires": [
            [
                "9b352ba8.1d4168"
            ]
        ]
    },
    {
        "id": "9b352ba8.1d4168",
        "type": "subflow:5fdbdfda.c7682",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 960,
        "y": 860,
        "wires": []
    },
    {
        "id": "7e78b9f9.6e8ab",
        "type": "mqtt in",
        "z": "8d261cdd.c349c8",
        "name": "Red door",
        "topic": "modbus/endpointpp/state/red_door_opened",
        "qos": "2",
        "datatype": "auto",
        "broker": "12539a43.97344e",
        "nl": false,
        "rap": false,
        "x": 120,
        "y": 440,
        "wires": [
            [
                "2a1eb4d7.4a05bc"
            ]
        ]
    },
    {
        "id": "d944584b.2fb688",
        "type": "mqtt out",
        "z": "aefaaeba.b6c3e",
        "name": "Spotlight in Aquarium",
        "topic": "modbus/endpointpp/set/aquarium_light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "38ae88a6.eb3738",
        "type": "change",
        "z": "aefaaeba.b6c3e",
        "name": "Turn ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "True",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "d944584b.2fb688",
                "f714bff0.601f68"
            ]
        ]
    },
    {
        "id": "f714bff0.601f68",
        "type": "delay",
        "z": "aefaaeba.b6c3e",
        "name": "Wait 0.35s",
        "pauseType": "delay",
        "timeout": "350",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "7fb187b8.40afc"
            ]
        ]
    },
    {
        "id": "7fb187b8.40afc",
        "type": "change",
        "z": "aefaaeba.b6c3e",
        "name": "Turn OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 180,
        "wires": [
            [
                "d944584b.2fb688"
            ]
        ]
    },
    {
        "id": "7d1145e1.4e491c",
        "type": "subflow:aefaaeba.b6c3e",
        "z": "b99cea79.040428",
        "name": "",
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "50e518a7.cc392"
            ]
        ]
    },
    {
        "id": "e0fdfecd.7ebf2",
        "type": "subflow:aefaaeba.b6c3e",
        "z": "235c2ad5.2abe8e",
        "name": "",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "fae64045.000328"
            ]
        ]
    },
    {
        "id": "e682e85c.3552a8",
        "type": "change",
        "z": "b99cea79.040428",
        "name": "Log RFID identification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'Opening doors for: ' & payload",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "749958ee.36b67"
            ]
        ]
    },
    {
        "id": "e5a81c05.c8f1e",
        "type": "function",
        "z": "bd2beaba.a84ee8",
        "name": "Add timestamp to payload",
        "func": "msg.payload = `[${new Date().toISOString()}] ${msg.payload}`;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 160,
        "wires": [
            [
                "eb0ee375.eb6208"
            ]
        ]
    },
    {
        "id": "eb0ee375.eb6208",
        "type": "file",
        "z": "bd2beaba.a84ee8",
        "name": "Write to bksp.log",
        "filename": "/home/acs/app/log/bksp.log",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 470,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "749958ee.36b67",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "b99cea79.040428",
        "name": "",
        "x": 1260,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d7770a0.57c22",
        "type": "change",
        "z": "235c2ad5.2abe8e",
        "name": "Log Marvin action",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening doors via Telegram",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "7457758b.137014"
            ]
        ]
    },
    {
        "id": "7457758b.137014",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "235c2ad5.2abe8e",
        "name": "",
        "x": 1200,
        "y": 220,
        "wires": []
    },
    {
        "id": "a257c60d.e106f",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log aquarium door action",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening Aquarium door by Aquarium button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 920,
        "wires": [
            [
                "57e85406.1dfadc"
            ]
        ]
    },
    {
        "id": "57e85406.1dfadc",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 920,
        "y": 920,
        "wires": []
    },
    {
        "id": "b79bfebd.ed9ec",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log Portable Button usage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening doors by Portable Button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 660,
        "wires": [
            [
                "1d55ff38.339ba9"
            ]
        ]
    },
    {
        "id": "1d55ff38.339ba9",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 980,
        "y": 660,
        "wires": []
    },
    {
        "id": "1d7d9c6f.939adc",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log Red Button usage",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Opening doors by Red Button",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "70b27c84.3061ec"
            ]
        ]
    },
    {
        "id": "70b27c84.3061ec",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 980,
        "y": 520,
        "wires": []
    },
    {
        "id": "4d66ed76.feec04",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Log Presence Switch change",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'Changed Presence Switch to: ' & (payload = 'True' ? 'Open' : 'Closed' )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 180,
        "wires": [
            [
                "28cf8a6e.dacb06"
            ]
        ]
    },
    {
        "id": "28cf8a6e.dacb06",
        "type": "subflow:bd2beaba.a84ee8",
        "z": "3f4159ea.cdc276",
        "name": "",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "c2ac31f0.b686b8",
        "type": "change",
        "z": "3f4159ea.cdc276",
        "name": "Turn Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "False",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1060,
        "wires": [
            [
                "4fd2723c.3ca984"
            ]
        ]
    },
    {
        "id": "4fd2723c.3ca984",
        "type": "mqtt out",
        "z": "3f4159ea.cdc276",
        "name": "Solenoid",
        "topic": "modbus/endpointpp/set/red_door_lock",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "12539a43.97344e",
        "x": 480,
        "y": 1060,
        "wires": []
    },
    {
        "id": "fb6109a7.b19348",
        "type": "inject",
        "z": "3f4159ea.cdc276",
        "name": "Trigger each 1s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "c2ac31f0.b686b8"
            ]
        ]
    },
    {
        "id": "680eb360.cba7ac",
        "type": "comment",
        "z": "3f4159ea.cdc276",
        "name": "Disengage unlock pin solenoid each 1s to avoid overheating",
        "info": "",
        "x": 260,
        "y": 1020,
        "wires": []
    }
]